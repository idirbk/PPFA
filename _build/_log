### Starting build.
# Target: src/Main.ml.depends, tags: { extension:ml, file:src/Main.ml, ocaml, ocamldep, quiet }
ocamlfind ocamldep -modules src/Main.ml > src/Main.ml.depends
# Target: src/Game.ml.depends, tags: { extension:ml, file:src/Game.ml, ocaml, ocamldep, quiet }
ocamlfind ocamldep -modules src/Game.ml > src/Game.ml.depends
# Target: src/Tools.ml.depends, tags: { extension:ml, file:src/Tools.ml, ocaml, ocamldep, quiet }
ocamlfind ocamldep -modules src/Tools.ml > src/Tools.ml.depends
# Target: src/Tools.cmo, tags: { byte, compile, extension:cmo, extension:ml, file:src/Tools.cmo, file:src/Tools.ml, implem, ocaml, quiet }
ocamlfind ocamlc -c -I src -o src/Tools.cmo src/Tools.ml
# Target: src/Network.ml.depends, tags: { extension:ml, file:src/Network.ml, ocaml, ocamldep, quiet }
ocamlfind ocamldep -modules src/Network.ml > src/Network.ml.depends
# Target: src/Game.cmo, tags: { byte, compile, extension:cmo, extension:ml, file:src/Game.cmo, file:src/Game.ml, implem, ocaml, quiet }
ocamlfind ocamlc -c -I src -o src/Game.cmo src/Game.ml
+ ocamlfind ocamlc -c -I src -o src/Game.cmo src/Game.ml
File "src/Game.ml", line 100, characters 2-109:
100 | ..match l with
101 |   | [] -> []
102 |   | (x,p)::ll when x == id-> ll
103 |   | (x,p)::ll when x != id-> (x,p)::(rm_id ll id)
Warning 8: this pattern-matching is not exhaustive.
Here is an example of a case that is not matched:
_::_
(However, some guarded clause may match this value.)
File "src/Game.ml", line 154, characters 16-18:
154 | if   (x1 != x0) or (y1 != y0) then
                      ^^
Alert deprecated: Stdlib.or
Use (||) instead.
File "src/Game.ml", line 200, characters 2-9:
200 |   clear 0;
        ^^^^^^^
Warning 10: this expression should have type unit.
File "src/Game.ml", line 217, characters 8-9:
217 |     let x =List.assoc id !players_list in 
              ^
Warning 26: unused variable x.
# Target: src/Network.cmo, tags: { byte, compile, extension:cmo, extension:ml, file:src/Network.cmo, file:src/Network.ml, implem, ocaml, quiet }
ocamlfind ocamlc -c -I src -o src/Network.cmo src/Network.ml
+ ocamlfind ocamlc -c -I src -o src/Network.cmo src/Network.ml
File "src/Network.ml", line 60, characters 9-13:
60 |      let sock = Unix.socket domain Unix.SOCK_STREAM 0 in 
              ^^^^
Warning 26: unused variable sock.
# Target: src/Main.cmo, tags: { byte, compile, extension:cmo, extension:ml, file:src/Main.cmo, file:src/Main.ml, implem, ocaml, quiet }
ocamlfind ocamlc -c -I src -o src/Main.cmo src/Main.ml
# Target: src/Tools.cmx, tags: { compile, extension:cmx, extension:ml, file:src/Tools.cmx, file:src/Tools.ml, implem, native, ocaml, quiet }
ocamlfind ocamlopt -c -I src -o src/Tools.cmx src/Tools.ml
# Target: src/Game.cmx, tags: { compile, extension:cmx, extension:ml, file:src/Game.cmx, file:src/Game.ml, implem, native, ocaml, quiet }
ocamlfind ocamlopt -c -I src -o src/Game.cmx src/Game.ml
+ ocamlfind ocamlopt -c -I src -o src/Game.cmx src/Game.ml
File "src/Game.ml", line 100, characters 2-109:
100 | ..match l with
101 |   | [] -> []
102 |   | (x,p)::ll when x == id-> ll
103 |   | (x,p)::ll when x != id-> (x,p)::(rm_id ll id)
Warning 8: this pattern-matching is not exhaustive.
Here is an example of a case that is not matched:
_::_
(However, some guarded clause may match this value.)
File "src/Game.ml", line 154, characters 16-18:
154 | if   (x1 != x0) or (y1 != y0) then
                      ^^
Alert deprecated: Stdlib.or
Use (||) instead.
File "src/Game.ml", line 200, characters 2-9:
200 |   clear 0;
        ^^^^^^^
Warning 10: this expression should have type unit.
File "src/Game.ml", line 217, characters 8-9:
217 |     let x =List.assoc id !players_list in 
              ^
Warning 26: unused variable x.
# Target: src/Network.cmx, tags: { compile, extension:cmx, extension:ml, file:src/Network.cmx, file:src/Network.ml, implem, native, ocaml, quiet }
ocamlfind ocamlopt -c -I src -o src/Network.cmx src/Network.ml
+ ocamlfind ocamlopt -c -I src -o src/Network.cmx src/Network.ml
File "src/Network.ml", line 60, characters 9-13:
60 |      let sock = Unix.socket domain Unix.SOCK_STREAM 0 in 
              ^^^^
Warning 26: unused variable sock.
# Target: src/Main.cmx, tags: { compile, extension:cmx, extension:ml, file:src/Main.cmx, file:src/Main.ml, implem, native, ocaml, quiet }
ocamlfind ocamlopt -c -I src -o src/Main.cmx src/Main.ml
# Target: src/Main.native, tags: { dont_link_with, extension:native, file:src/Main.native, link, native, ocaml, program, quiet }
ocamlfind ocamlopt unix.cmxa -linkpkg -I src src/Tools.cmx src/Game.cmx src/Network.cmx src/Main.cmx -o src/Main.native
# Compilation successful.
